     1. The need for automating repetitive work (reducing errors, improving efficiency)
        - IT opratinons
     	- Provisioning
     	- Configuration Management
     	- Continuous delivery
     	- Application deployment
     	- Security compliance
     	
        
     
     2. Ansible: an open source software provisioning /configuration automation tool
     
          Features 
            - Simplicity
                - Learn
                - Setup
                - Extend modules in any language
            - Batteries included
               - In the form of modules,how Ansible manages infrastructure 2k+ modules available
               -  provision cloud components using modules
               - Monitoring tools, source control , Network, collaboration tools
               - 2 categories  core(by ansible) and extra(by community)
            - Infrastructure as Code
               - Represent a system's final state as yaml
            - Code vs Data
               - It separates codes from data
               - Code is generic, by using templates , add data separate using variables
            - Idempotence
               - property of an operation in maths and CS, that can be done multiple time without changing the result beyond the initial application
               - different ways to achieve desired state based on situations
                  user
                    name=xyz
                    uid=5001
                    pass=pqr
                    
                  useradd, or usermod or passwd or nothing to achieve tha above state  
                   
        
        Why it is different?
          - No custom PKI . SSH-based
          - Agentless Architecture (as in Cheff and puppet)
          - Configuration as data not Code
          - Full Configuration management orchestarion and deployment
          
     3. How Ansible work (philosophy and its building blocks)
           - include the image and description from edureka
           
     4. Typical Ansible Use-cases (two simple but non-trivial examples)
           - setting up lab env
		   - install examples from slide
		             
     5. Your first Ansible playbook (example to familiarise the structure and content of a playbook)
     6. More commands (cover essential command and functions here)
     7. Advanced topics (cover 3-4 functions/commands here)
     8. Where to look for more documentation (provide info on/links to documentation) 
     9. Conclusion (recap)